import rsa, json, blockchain as bc

officer_sk = (77403688282142544205314212621296908742272296908900554651485608721820767608519020406004609964525173111554835206655481559754138145777389045680560296689029735533527928916555953825565631796178852090273490199225776732817961184252145570567608592336296623409006410096972728325533188905606144965620227157261885360973, 161941117923280955134355229132064980311007167518551177979071423425441904126400990912955279273586153877477070548717647086404052726570239294070770316491905588998614614656647816350376449901503102714108548544139971408958343514692078051682036145654174274763803825241777894031396491467534656286253443290622957900333, 1024)

f = open('chain.json', 'r')
blockchain = json.loads(f.readlines()[0])
f.close()

if bc.validateChain(blockchain):
	vote_count = {}

	for i in range(1, len(blockchain)):
		for k, v in blockchain[i]['transactions'].items():
			voter, party = k, rsa.decrypt(v['party (ext-officer encrypted)'], officer_sk).split('$')[0]
			print('{}: {} at {}'.format(voter, party, v['timestamp']))
			if party not in vote_count:
				vote_count[party] = 1
			else:
				vote_count[party] += 1
				
	print()

	for k, v in vote_count.items():
		print('{}: {}'.format(k, v))
